<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" 
          rel="stylesheet" 
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" 
          crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css"
      integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog=="
      crossorigin="anonymous" 
      referrerpolicy="no-referrer" />
    <style>
      .chatbox {
        outline: 1px solid silver;
        min-height: 160px;
        padding: 0.5;
      }
    </style>
    <title>Home</title>
  </head>
  <body>
      <div class="container">
        <div class="row">
            <div class="col">
              <h1 class="mt-3">This is the home page</h1>
              <hr>
            </div>
        </div>
        <div class="row">
          <div class="col-md-8">
            <h3>The Chat</h3>
            <p><a href="https://github.com">Go to Github</a></p>
            <div class="form-group">
              <label for="username">Username:</label>
              <input type="text" name="username" id="username" class="form-control" autocomplete="off"/>
            </div>

            <div class="form-group">
              <label for="username">Message:</label>
              <input type="text" name="message" id="message" class="form-control" autocomplete="off"/>
            </div>
            <hr>
            <a href="javascript:void(0);" class="btn btn-outline-primary" id="sendBtn">Send Message</a>

            <input type="hidden" name="action" id="action"/>

            <div id="status" class="mt-2 float-end">
            
            </div>

            <div class="chatbox mt-3" id="output">

            </div>

          </div>
          <div class="col-md-4">
            <h3>Who's Online</h3>

            <ul id="online_users"></ul>
          </div>
        </div>
      </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
      integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" 
      crossorigin="anonymous" referrerpolicy="no-referrer">
    </script>
    <script src="/static/reconnecting-websocket.min.js"></script>
    <script>

      var socket = null;
      var output = document.getElementById("output");
      let userField = document.getElementById("username");
      let msgField = document.getElementById("message");


      window.onbeforeunload = function() {
        console.log("Leaving")
        let jsonData = {}
        jsonData["action"] = "left"
        socket.send(JSON.stringify(jsonData))
      }

      document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconnectInterval: 3000});

        const offline = `<span class="badge bg-danger">Not connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        const statusDiv = document.getElementById("status");

        socket.onopen = () => {
          console.log("Successfully connected");
          statusDiv.innerHTML = online;
        };

        socket.onclose = () => {
          console.log("Connection was closed");
          statusDiv.innerHTML = offline;
        };

        socket.onerror = (error) => {
          console.log("There was an error");
        };
        
        socket.onmessage = (msg) => {
          let data = JSON.parse(msg.data)
          console.log("Action is", data)


          switch(data.action) {
            case "list_users":
              let ul = document.getElementById("online_users");
              while(ul.firstChild) ul.removeChild(ul.firstChild);

              if (data.connected_users.length > 0) {
                  data.connected_users.forEach(function(item){
                    let li = document.createElement("li");
                    li.appendChild(document.createTextNode(item));
                    ul.appendChild(li);
                  });
                }
              break;
            case "broadcast":
              output.innerHTML = output.innerHTML + data.message + "<br>";
              break;
          }
        }

        userField.addEventListener("change", function() {
          let jsonData = {}
          jsonData["action"] = "username";
          jsonData["username"] = this.value;

          socket.send(JSON.stringify(jsonData))
        })

        msgField.addEventListener("keydown", function(e) {
          if (e.code === "Enter") {
              // if not connect
              if (!socket){
                console.log("no connection");
                return false; 
              }
              if ((userField.value === "") || (msgField.value === "")) {
                errorMessage("Fill out user name field and message field");
                return false;
              } else {
                sendMessage()
              }

              e.preventDefault();
              e.stopPropagation();
          }
        })
        document.getElementById("sendBtn").addEventListener("click", function() {
          if ((userField.value === "") || (msgField.value === "")) {
              errorMessage("Fill out user name field and message field");
              return false;
          } else {
            sendMessage()
          }

        });

      });

      function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = msgField.value;
        socket.send(JSON.stringify(jsonData));
        msgField.value = "";
      }

      function errorMessage(msg){
        notie.alert({ type: "error",text: msg })
      }

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" 
            crossorigin="anonymous">
    </script>
  </body>
  <!--Adding JavaScript that will connect to our ws-endpoint  -->
</html>
